name: Java CI with Gradle

on:
  push:
    branches: [ "main", "dev" ]
  pull_request:
    branches: [ "main", "dev" ]

permissions:
  contents: read

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3
      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'temurin'

      - name: make application.properties
        run: |
          cd ./src/main/resources
          touch -f ./application.properties
          echo "${{ secrets.APPLICATION_PROD }}" > ./application.properties

      - name: Grant execute permission for gradlew
        run: chmod +x gradlew

      - name: Build with Gradle
        run: ./gradlew build -x test

      - name: Docker build
        run: |
          echo "${{ secrets.DOCKER_ACCESS_TOKEN }}" | docker login -u ${{ secrets.DOCKER_USERNAME }} --password-stdin
          docker build -t app .
          docker tag app ${{ secrets.DOCKER_USERNAME }}/codechallenge:latest
          docker push ${{ secrets.DOCKER_USERNAME }}/codechallenge:latest

      - name: Deploy
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.HOST }}
          username: ubuntu
          key: ${{ secrets.PRIVATE_KEY }}
          script: |
            docker pull ${{ secrets.DOCKER_USERNAME }}/codechallenge:latest
            docker stop $(docker ps -a -q)
            exited_containers=$(docker ps --filter 'status=exited' -a -q)
            if [ ! -z "$exited_containers" ]; then
              docker rm $exited_containers
            fi
            docker run --privileged --name java-docker -d docker:dind
            docker run --privileged --name python-docker -d docker:dind
            docker run --privileged --name node-docker -d docker:dind
            docker run -d --log-driver=syslog -p 8080:8080 ${{ secrets.DOCKER_USERNAME }}/codechallenge:latest
            
            
            docker image prune -a -f

        



